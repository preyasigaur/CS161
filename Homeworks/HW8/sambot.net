net
{
	propagationenginegenerator1791944048146838126L = "edu.ucla.belief.approx.BeliefPropagationSettings@64473d7c";
	jenginegenerator6060830225489488864L = "edu.ucla.belief.inference.JoinTreeSettings@629d1041";
	recoveryenginegenerator6944530267470113528l = "edu.ucla.util.SettingsImpl@6a910619";
	node_size = (130 55);
}

node DogOutside
{
	states = ("Yes" "No" );
	position = (279 -140);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable19";
	label = "DogOutside";
	excludepolicy = "include whole CPT";
}
node DogBarking
{
	states = ("Yes" "No" );
	position = (417 -253);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable20";
	label = "DogBarking";
	excludepolicy = "include whole CPT";
}
node LightSensorHealth
{
	states = ("OK" "Broken" );
	position = (834 -613);
	diagnosistype = "AUXILIARY";
	ismapvariable = "false";
	ID = "variable23";
	label = "LightSensorHealth";
	excludepolicy = "include whole CPT";
}
node OutdoorLight
{
	states = ("On" "Off" );
	position = (713 -354);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable24";
	label = "OutdoorLight";
	excludepolicy = "include whole CPT";
}
node FamilyHome
{
	states = ("Yes" "No" );
	position = (464 -34);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable16";
	label = "FamilyHome";
	excludepolicy = "include whole CPT";
}
node HearableBarking
{
	states = ("Yes" "No" );
	position = (278 -353);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable21";
	label = "HearableBarking";
	excludepolicy = "include whole CPT";
}
node ExpectingGuests
{
	states = ("Yes" "No" );
	position = (816 -33);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable17";
	label = "ExpectingGuests";
	excludepolicy = "include whole CPT";
}
node DogBowelTrouble
{
	states = ("Yes" "No" );
	position = (84 -34);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable18";
	label = "DogBowelTrouble";
	excludepolicy = "include whole CPT";
}
node LightSensor
{
	states = ("On" "Off" );
	position = (716 -481);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable25";
	label = "LightSensor";
	excludepolicy = "include whole CPT";
}
node Battery
{
	states = ("OK" "Dead" );
	position = (490 -477);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable26";
	label = "Battery";
	excludepolicy = "include whole CPT";
}
node SoundSensor
{
	states = ("On" "Off" );
	position = (281 -477);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable22";
	label = "SoundSensor";
	excludepolicy = "include whole CPT";
}
node SoundSensorHealth
{
	states = ("OK" "Broken" );
	position = (156 -622);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable23";
	label = "SoundSensorHealth";
	excludepolicy = "include whole CPT";
}
potential ( DogOutside | FamilyHome DogBowelTrouble )
{
	data = (((	0.5	0.5	)
		(	0.5	0.5	))
		((	0.5	0.5	)
		(	0.5	0.5	)));
}
potential ( DogBarking | DogOutside )
{
	data = ((	0.5	0.5	)
		(	0.5	0.5	));
}
potential ( LightSensorHealth | )
{
	data = (	0.5	0.5	);
}
potential ( OutdoorLight | ExpectingGuests FamilyHome )
{
	data = (((	0.5	0.5	)
		(	0.5	0.5	))
		((	0.5	0.5	)
		(	0.5	0.5	)));
}
potential ( FamilyHome | )
{
	data = (	0.5	0.5	);
}
potential ( HearableBarking | DogBarking )
{
	data = ((	0.5	0.5	)
		(	0.5	0.5	));
}
potential ( ExpectingGuests | FamilyHome )
{
	data = ((	0.5	0.5	)
		(	0.5	0.5	));
}
potential ( DogBowelTrouble | )
{
	data = (	0.5	0.5	);
}
potential ( LightSensor | OutdoorLight LightSensorHealth Battery )
{
	data = ((((	0.5	0.5	)
		(	0.5	0.5	))
		((	0.5	0.5	)
		(	0.5	0.5	)))
		(((	0.5	0.5	)
		(	0.5	0.5	))
		((	0.5	0.5	)
		(	0.5	0.5	))));
}
potential ( Battery | )
{
	data = (	0.5	0.5	);
}
potential ( SoundSensor | HearableBarking SoundSensorHealth Battery )
{
	data = ((((	0.5	0.5	)
		(	0.5	0.5	))
		((	0.5	0.5	)
		(	0.5	0.5	)))
		(((	0.5	0.5	)
		(	0.5	0.5	))
		((	0.5	0.5	)
		(	0.5	0.5	))));
}
potential ( SoundSensorHealth | )
{
	data = (	0.5	0.5	);
}
